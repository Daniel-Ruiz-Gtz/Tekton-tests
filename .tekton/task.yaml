apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-clone-task
spec:
  params:
    - name: repository-url
    - name: revision
  workspaces:
    - name: output
  steps:
    - name: echo-clone
      image: 'registry.access.redhat.com/ubi9/ubi-minimal:9.6'
      workingDir: $(workspaces.output.path)
      env:
        - name: repository_url
          value: $(params.repository-url)
        - name: revision
          value: $(params.revision)
      script: |
        #!/bin/sh
        set -e
        microdnf install -y git && microdnf clean all
        echo "Cloning repository..."
        echo "Repository URL: $repository_url"
        echo "Revision: $revision"
        rm -rf ./* ./.??*
        git clone --branch "$revision" "$repository_url" .

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: lint-task
spec:
  params:
    - name: repository-url
  workspaces:
    - name: output
  steps:
    - name: run-lint
      image: 'registry.access.redhat.com/ubi9/python-311:9.6'
      workingDir: $(workspaces.output.path)
      env:
        - name: repository_url
          value: $(params.repository-url)
        - name: workspace
          value: $(workspaces.output.path)
      script: |
        #!/bin/sh
        set -e
        echo "Installing dependencies..."
        pip3 install -r requirements.txt
        echo "Installing make..."
        microdnf install -y make && microdnf clean all
        make lint

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-task
spec:
  workspaces:
    - name: output
  steps:
    - name: echo-deploy
      image: 'registry.access.redhat.com/ubi9/ubi-minimal:9.6'
      workingDir: $(workspaces.output.path)
      script: |
        #!/bin/sh
        echo "Installing make..."
        microdnf install -y make && microdnf clean all
        make deploy
