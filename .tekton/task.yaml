---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-clone-task
spec:
  params:
    - name: url
      type: string
    - name: rev
      type: string
  workspaces:
    - name: output
  steps:
    - name: clone
      image: alpine/git
      workingDir: $(workspaces.output.path)
      script: |
        #!/bin/sh
        set -e
        echo "Cloning: $(params.url)"
        rm -rf source .git || true
        git clone --no-checkout $(params.url) source
        cd source
        # normaliza: si viene refs/heads/X -> usa X
        REV="$(params.rev)"
        case "$REV" in
          refs/heads/*) BRANCH="${REV#refs/heads/}" ;;
          *)             BRANCH="$REV" ;;
        esac
        echo "Checking out: $BRANCH"
        git checkout -B "$BRANCH" "origin/$BRANCH" 2>/dev/null || git checkout "$BRANCH" || true
        # si no existÃ­a remoto (PR desde fork), intenta checkout por nombre local
        git status

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: lint-task
spec:
  workspaces:
    - name: source
  steps:
    - name: run-pylint
      image: python:3.11
      workingDir: $(workspaces.source.path)/source
      script: |
        #!/bin/sh
        set -e
        echo "Installing pylint..."
        pip install --no-cache-dir pylint
        echo "Repo root:"
        pwd; ls -la
        echo "Running pylint on all *.py..."
        FILES="$(find . -type f -name '*.py' | tr '\n' ' ')"
        if [ -z "$FILES" ]; then
          echo "No Python files found. Exiting successfully."
          exit 0
        fi
        # no queremos fallar el pipeline por estilo; quita '|| true' si quieres que falle
        pylint $FILES || true

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-task
spec:
  workspaces:
    - name: source
  steps:
    - name: echo-deploy
      image: alpine:3.19
      workingDir: $(workspaces.source.path)/source
      script: |
        #!/bin/sh
        set -e
        echo "ðŸš€ This is a deploy to main"
        echo "Here you would run your real deployment command"
